name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_reved_kids
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: test_reved_kids
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        JWT_SECRET: test-jwt-secret-for-testing-only
    
    - name: Build Backend
      working-directory: ./backend
      run: npm run build

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Run Security Audit
      run: |
        cd backend && npm audit --audit-level=moderate
        cd ../frontend && npm audit --audit-level=moderate
    
    - name: Check for Secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: HEAD~1

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, security-scan]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Backend Docker Image
      run: |
        cd backend
        docker build -t diamond-app-backend:${{ github.sha }} .
    
    - name: Build Frontend Docker Image
      run: |
        cd frontend
        docker build -t diamond-app-frontend:${{ github.sha }} .
    
    - name: Test Docker Compose
      run: |
        docker-compose -f backend/docker-compose.yml config
        docker-compose -f backend/docker-compose.prod.yml config
